bee-creative.util - [cc-by] Sebastian Rostock
Dieses Werk ist unter einem Creative Commons Namensnennung 3.0 Deutschland Lizenzvertrag lizenziert. Um die Lizenz
anzusehen, gehen Sie bitte zu:  [ http://creativecommons.org/licenses/by/3.0/de/ ] oder schicken Sie einen Brief an:
[ Creative Commons, 171 Second Street, Suite 300, San Francisco, California 94105, USA. ]

Diese Bibliothek beinhaltet mehrere Hilfsklassen und Hilfsmethoden zur Realisirung funktionaler Operatoren auf Filtern, 
Iteratoren und Convertern im Zusammenhang mit anderen Schnittstellen. 


TODO Beispiele: Filter, Converter, Iterable
	Iteration über einem Baum mit Navigation über Converter
	mit Filtern in einer Ebene der Iteration


TODO Beispiele 1: Comparator, Converter, Conversion
	schnelle sortierung mit Conversion bei aufwändigen Convertern
		 Iterable<I> entries = // ...
		 Converter<I, O> converter = // ...
		 Comparator<O> comparator = // ...
		 List<Conversion<I, O>> conversions = new ArrayList<Conversion<I, O>>();
		 Iterables.appendAll(Iterables.convertedIterable(Conversions.staticConversionConverter(converter), entries), conversions);
		 Collections.sort(conversions, Comparators.convertedComparator(Conversions.<O>conversionOutputConverter(), comparator));
		 Iterable<I> inputs = Iterables.convertedIterable(Conversions.<I>conversionInputConverter(), conversions);
		 Iterable<O> outputs = Iterables.convertedIterable(Conversions.<O>conversionOutputConverter(), conversions);
 
	
TODO Beispiele 2: Comparable
	schnelle suche mit comparable in sortierten Listen

	public static class Range {
		public int from; // Startposition der Range
		public int size; // Größe/Länge der Range
		// ...
	}

	public Range find(final List<Range> ranges, final int position) {
		final int index = Comparables.binarySearch(ranges, new Comparable<Range>() {

			@Override
			public int compareTo(final Range o) {
				if(o.from > position) return 1; 
				if((o.from + o.size) <= position) return -1;
				return 0;
			}

		});
		if(index < 0) return null;
		return ranges.get(index);
	}



TODO Beispiele: pointer, builder 
	statischer cache mit automatischem builder

	public final class Helper {

		private static final Builder<Helper> BUILDER = Builders.synchronizedBuilder(
			Builders.cachedBuilder(Pointers.SOFT, new Builder<Helper>() {

				@Override
				public Helper build() {
					return new Helper();
				}

			}));

		public static Helper get() {
			return Helper.BUILDER.build();
		}

		Helper() {
			// ...
		}

	}


	public void work() {
		final Helper helper = Helper.get();
		// ...
	}
	